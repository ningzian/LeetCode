Given a list, rotate the list to the right by k places, where k is non-negative.

For example:
Given 1->2->3->4->5->NULL and k = 2,
return 4->5->1->2->3->NULL.

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) 
    {
        if (head == NULL) return head;
        
        ListNode *newH, *tail; //指针的默认初始化为NULL
        newH = tail = head;
        
        int cnt = 1;
        while(tail->next != NULL) { tail = tail->next; cnt++; }
        tail->next = head;  //连成一个圈
        
        if(k %= cnt) 
        {
            for(int i = 0;i<(cnt-k);i++) tail = tail->next; //从head开始，找到第cnt-k个，就是最后的tail
        }
        newH = tail->next;
        tail->next = NULL;
        return newH;
        
        
    }
};
