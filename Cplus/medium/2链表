1，新建链表节点 用 new ListNode(int)
2，%比-速度快
3，节点遍历，头head, 指针pointer, 用这两个就够了


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) 
    {
        bool it = 0;
        ListNode ans(0);
        ListNode* ans_now = &ans;
        ListNode* l1_now = l1;
        ListNode* l2_now = l2;
        int st = 0;
        
        while(l1_now!=NULL && l2_now!=NULL)
        {
            
                st = l1_now->val + l2_now->val + it;
                l1_now = l1_now->next;
                l2_now = l2_now->next;
            
            
            it = 0;
            
         
            if (st>9)
            {
                it = 1;
                st %= 10; 
            }
            //ListNode ans_new(st);
            ans_now->next = new ListNode(st);   
            ans_now = ans_now->next;
            
        }
        
        while(l1_now!=NULL)
        {
            if(l1_now->val + it == 10)
            {
                ans_now->next = new ListNode(0);                
            }
            else
            {
                ans_now->next = new ListNode(l1_now->val + it);
                it = 0;
            }
            ans_now = ans_now->next;
            l1_now = l1_now->next;
                 
        }
        while(l2_now!=NULL)
        {
            if(l2_now->val + it == 10)
            {
                ans_now->next = new ListNode(0);                
            }
            else
            {
                ans_now->next = new ListNode(l2_now->val + it);
                it = 0;
            }
            ans_now = ans_now->next;
            l2_now = l2_now->next;
                 
        }
        
        if (it)
        {           
            ans_now->next = new ListNode(1);
        }
       
        
        return ans.next;
        
        
        
        
    }
};
